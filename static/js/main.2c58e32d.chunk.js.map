{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","React","useState","transactionList","setTransactionList","useEffect","fetch","then","r","json","className","map","t","style","display","gridTemplateColumns","id","time","native_amount","native_amount_usd","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+JAiCeA,MA/Bf,WAAgB,IAAD,EACiCC,IAAMC,SAAS,IADhD,mBACNC,EADM,KACWC,EADX,KAQb,OANAH,IAAMI,WAAU,WACdC,MAAM,2CACHC,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,KAAKH,KACP,IAGD,sBAAKM,UAAU,MAAf,UACE,6DACA,yBAAQA,UAAU,aAAlB,UACE,iDACCP,EAAgBQ,KAAI,SAACC,GAAD,OACnB,sBACEC,MAAO,CACLC,QAAS,OACTC,oBAAqB,uBAHzB,UAME,8BAAMH,EAAEI,KACR,8BAAMJ,EAAEK,OACR,8BAAML,EAAEM,gBACR,8BAAMN,EAAEO,iCCXLC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.2c58e32d.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction App() {\n  const [transactionList, setTransactionList] = React.useState([]);\n  React.useEffect(() => {\n    fetch(\"http://localhost:8000/api/transactions/\")\n      .then((r) => r.json())\n      .then(setTransactionList);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Gerardo Perrucci: Demo site</h1>\n      <header className=\"App-header\">\n        <p>Transaction list</p>\n        {transactionList.map((t: any) => (\n          <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"80px repeat(3, 1fr)\",\n            }}\n          >\n            <div>{t.id}</div>\n            <div>{t.time}</div>\n            <div>{t.native_amount}</div>\n            <div>{t.native_amount_usd}</div>\n          </div>\n        ))}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}